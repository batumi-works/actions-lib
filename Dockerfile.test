# Dockerfile for running GitHub Actions tests in a container
FROM ubuntu:22.04

# Add project label for easier cleanup
LABEL project="actions-lib"

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV BATS_LIB_PATH=/usr/lib/bats
ENV PATH="/usr/local/bin:${PATH}"

# Layer 1: Create user (rarely changes)
RUN groupadd -r testuser && useradd -r -g testuser testuser

# Layer 2: Install APT packages (changes occasionally)
# Split into multiple layers for better caching
RUN apt-get update && apt-get install -y \
    # Essential tools that rarely change
    curl \
    wget \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Layer 3: Core testing tools
RUN apt-get update && apt-get install -y \
    bats \
    shellcheck \
    git \
    make \
    jq \
    && rm -rf /var/lib/apt/lists/*

# Layer 4: Language runtimes
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    ruby \
    ruby-dev \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Layer 5: Additional tools
RUN apt-get update && apt-get install -y \
    # Docker client
    docker.io \
    # GitHub CLI
    gh \
    # Text processing
    sed \
    grep \
    findutils \
    # Performance tools
    time \
    # Network tools
    netcat \
    && rm -rf /var/lib/apt/lists/*

# Layer 6: Language-specific packages (changes less frequently)
# Install Ruby gems for coverage
RUN gem install bashcov simplecov

# Install additional Python packages
RUN pip3 install --no-cache-dir \
    pyyaml \
    jinja2

# Layer 7: External tools (version-pinned for consistency)
# Install act CLI with specific version for reproducibility
ARG ACT_VERSION=0.2.54
RUN curl -L "https://github.com/nektos/act/releases/download/v${ACT_VERSION}/act_Linux_x86_64.tar.gz" | tar -xz \
    && mv act /usr/local/bin/ \
    && chmod +x /usr/local/bin/act

# Layer 8: Create workspace structure (rarely changes)
RUN mkdir -p /workspace/{.test-cache,reports,artifacts} \
    && chown -R testuser:testuser /workspace

# Set working directory
WORKDIR /workspace

# Layer 9: Copy only necessary files first (for better caching)
# Copy scripts and configs that change less frequently
COPY --chown=testuser:testuser Makefile .actrc .dockerignore ./
COPY --chown=testuser:testuser scripts/ ./scripts/
COPY --chown=testuser:testuser tests/bats-setup.bash tests/bats.config ./tests/
COPY --chown=testuser:testuser tests/utils/ ./tests/utils/

# Layer 10: Copy test files (changes more frequently)
COPY --chown=testuser:testuser tests/ ./tests/

# Layer 11: Copy action files (changes most frequently)
COPY --chown=testuser:testuser actions/ ./actions/
COPY --chown=testuser:testuser .github/ ./.github/

# Layer 12: Copy documentation (optional, changes frequently)
COPY --chown=testuser:testuser docs/ ./docs/
COPY --chown=testuser:testuser *.md ./

# Make scripts executable
RUN find . -name "*.sh" -exec chmod +x {} \; \
    && find . -name "*.bats" -exec chmod +r {} \;

# Create test configuration
RUN echo '# Test configuration' > /workspace/.test-config \
    && echo 'export BATS_TEST_TIMEOUT=300' >> /workspace/.test-config \
    && echo 'export TEST_PARALLEL=true' >> /workspace/.test-config \
    && chown testuser:testuser /workspace/.test-config

# Switch to test user
USER testuser

# Verify installations
RUN bats --version && \
    act --version && \
    shellcheck --version && \
    python3 --version && \
    git --version && \
    gh --version

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD bats --version || exit 1

# Default command
CMD ["make", "test"]

# Labels
LABEL maintainer="GitHub Actions Test Suite"
LABEL version="1.0.0"
LABEL description="Container for running comprehensive GitHub Actions tests"